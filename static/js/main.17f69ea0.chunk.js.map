{"version":3,"sources":["components/ToccMap.js","index.js"],"names":["ToccMapItem","this","props","content","modal","className","onClick","style","left","coords","x","top","y","icon","React","Component","ToccMapOverlay","styleOverride","overlayClassNames","data","indexOf","background","push","src","title","str","a","document","createElement","innerHTML","c","childNodes","i","length","nodeType","isHTML","dangerouslySetInnerHTML","__html","open","join","onClose","cursor","ToccMap","state","loading","loaded","theme","modalItem","getMapItems","bind","setState","fetch","mode","redirect","then","res","json","map","d","key","onClickItem","classNames","overlayProps","onCloseItem","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.17f69ea0.chunk.js","sourcesContent":["import React from 'react';\nimport '../scss/ToccMap.scss';\nimport '../scss/ResponsiveEmbed.scss';\n\nclass ToccMapItem extends React.Component {\n  render() {\n    if (!this.props.content.modal) {\n      return null;\n    }\n\n    return (\n      <div className=\"toccmap__item\" onClick={ this.props.onClick } style={ { left: this.props.coords.x, top: this.props.coords.y } }>\n        <i>{ this.props.content.icon }</i>\n      </div>\n    );\n  }\n}\n\nclass ToccMapOverlay extends React.Component {\n  render() {\n    let props = {\n      className: 'oc-overlay'\n    };\n\n    let content = \"\";\n    let styleOverride = {};\n    let overlayClassNames = ['oc-overlay__container'];\n    let buttonOverride = {\n      cursor: 'pointer'\n    };\n\n    const isHTML = (str) => {\n      var a = document.createElement('div');\n      a.innerHTML = str;\n\n      for (var c = a.childNodes, i = c.length; i--; ) {\n        if (c[i].nodeType === 1) return true;\n      }\n\n      return false;\n    }\n\n    if (this.props.data) {\n      if (this.props.data.content.modal.indexOf('www.youtube.com/embed') >= 0) {\n        styleOverride = {\n          background: 'none'\n        };\n        overlayClassNames.push('oc-overlay__container--embed');\n        content = (\n          <div className=\"oc-responsive-embed\">\n            <iframe src={ this.props.data.content.modal } title={ this.props.data.content.icon }><p className=\"oc-white\">Loading</p></iframe>\n          </div>\n        );\n      } else if (isHTML(this.props.data.content.modal)) {\n        content = (\n          <div className=\"oc-content\">\n            <div dangerouslySetInnerHTML={ { __html: this.props.data.content.modal } } />\n          </div>\n        );\n      } else {\n        content = (\n          <div className=\"oc-content\">\n            <p dangerouslySetInnerHTML={ { __html: this.props.data.content.modal } } />\n          </div>\n        );\n      }\n    }\n\n    if (this.props.open) {\n      props.open = 'open';\n    }\n    return (\n      <div {...props}>\n        <div className={ overlayClassNames.join(' ') } style={ styleOverride }>\n          <button className=\"oc-overlay__close\" onClick={ this.props.onClose } style={ buttonOverride } />\n          { content }\n        </div>\n      </div>\n    );\n  }\n}\n\nclass ToccMap extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loaded: false,\n      data: [],\n      theme: 'Default',\n      modalItem: false\n    };\n\n    this.getMapItems = this.getMapItems.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true }, () => {\n      fetch('https://script.google.com/macros/s/AKfycbx0-06cEJ36cILW7N1QbyRvHJSiNrSCxL9QqHo_Sc90uDDHqA/exec', {\n        mode: 'cors',\n        redirect: 'follow'\n      }).then((res) => {\n        return res.json();\n      }).then((json) => {\n        this.setState({ data: json.data, theme: json.theme, loading: false, loaded: true });\n      });\n    });\n  }\n\n  getMapItems() {\n    return this.state.data.map((d, i) => {\n      return (\n        <ToccMapItem key={ i } {...d} onClick={ () => { this.onClickItem(d) } }/>\n      );\n    });\n  }\n\n  onClickItem(data) {\n    this.setState({ modalItem: data });\n  }\n\n  onCloseItem() {\n    this.setState({ modalItem: false });\n  }\n\n  render() {\n    let classNames = ['toccmap'];\n    if (this.state.loading) {\n      classNames.push('oc-loading');\n    }\n    if (this.state.loaded) {\n      classNames.push('toccmap--' + this.state.theme);\n      classNames.push('oc-loaded');\n    }\n\n    let overlayProps = {\n      onClose: this.onCloseItem.bind(this)\n    };\n\n    if (this.state.modalItem !== false) {\n      overlayProps.open = 'open';\n    }\n\n    return (\n      <div className={ classNames.join(' ') }>\n        <div className=\"toccmap__inner\" />\n        { this.getMapItems() }\n        <ToccMapOverlay {...overlayProps} data={ this.state.modalItem } />\n      </div>\n    );\n  }\n}\n\nexport default ToccMap;\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/stable';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport ToccMap from './components/ToccMap';\n\nReactDOM.render(\n  <ToccMap />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}