{"version":3,"sources":["components/ToccMap.js","index.js"],"names":["ToccMapItem","className","onClick","this","props","style","left","coords","x","top","y","content","icon","React","Component","ToccMapOverlay","styleOverride","buttonOverride","cursor","data","modal","indexOf","background","color","src","title","str","a","document","createElement","innerHTML","c","childNodes","i","length","nodeType","isHTML","dangerouslySetInnerHTML","__html","open","onClose","ToccMap","state","loading","theme","modalItem","getMapItems","bind","setState","fetch","mode","redirect","then","res","json","map","d","key","onClickItem","classNames","push","overlayProps","onCloseItem","join","ReactDOM","render","getElementById"],"mappings":"wTAKMA,G,4LAEF,OACE,yBAAKC,UAAU,gBAAgBC,QAAUC,KAAKC,MAAMF,QAAUG,MAAQ,CAAEC,KAAMH,KAAKC,MAAMG,OAAOC,EAAGC,IAAKN,KAAKC,MAAMG,OAAOG,IACxH,2BAAKP,KAAKC,MAAMO,QAAQC,W,GAJNC,IAAMC,YAU1BC,E,uKAEF,IAAIX,EAAQ,CACVH,UAAW,cAGTU,EAAU,GACVK,EAAgB,GAChBC,EAAiB,CACnBC,OAAQ,WA2CV,OA7BIf,KAAKC,MAAMe,OACThB,KAAKC,MAAMe,KAAKR,QAAQS,MAAMC,QAAQ,0BAA4B,GACpEL,EAAgB,CACdM,WAAY,QAEdL,EAAeM,MAAQ,QACvBZ,EACE,yBAAKV,UAAU,uBACb,4BAAQuB,IAAMrB,KAAKC,MAAMe,KAAKR,QAAQS,MAAQK,MAAQtB,KAAKC,MAAMe,KAAKR,QAAQC,SAUlFD,EA7BW,SAACe,GACd,IAAIC,EAAIC,SAASC,cAAc,OAC/BF,EAAEG,UAAYJ,EAEd,IAAK,IAAIK,EAAIJ,EAAEK,WAAYC,EAAIF,EAAEG,OAAQD,KACvC,GAAsB,IAAlBF,EAAEE,GAAGE,SAAgB,OAAO,EAGlC,OAAO,EAcIC,CAAOjC,KAAKC,MAAMe,KAAKR,QAAQS,OAEtC,yBAAKnB,UAAU,cACb,yBAAKoC,wBAA0B,CAAEC,OAAQnC,KAAKC,MAAMe,KAAKR,QAAQS,UAKnE,yBAAKnB,UAAU,cACb,uBAAGoC,wBAA0B,CAAEC,OAAQnC,KAAKC,MAAMe,KAAKR,QAAQS,WAMnEjB,KAAKC,MAAMmC,OACbnC,EAAMmC,KAAO,QAGb,wBAASnC,EACP,yBAAKH,UAAU,wBAAwBI,MAAQW,GAC7C,4BAAQf,UAAU,oBAAoBC,QAAUC,KAAKC,MAAMoC,QAAUnC,MAAQY,IAC3EN,Q,GAxDiBE,IAAMC,WAiIpB2B,E,kDAjEb,WAAYrC,GAAQ,IAAD,8BACjB,cAAMA,IAEDsC,MAAQ,CACXC,SAAS,EACTxB,KAAM,GACNyB,MAAO,UACPC,WAAW,GAGb,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAVF,E,gEAaE,IAAD,OAClB5C,KAAK6C,SAAS,CAAEL,SAAS,IAAQ,WAC/BM,MAAM,iGAAkG,CACtGC,KAAM,OACNC,SAAU,WACTC,MAAK,SAACC,GACP,OAAOA,EAAIC,UACVF,MAAK,SAACE,GACP,EAAKN,SAAS,CAAE7B,KAAMmC,EAAKnC,KAAMyB,MAAOU,EAAKV,MAAOD,SAAS,Y,oCAKpD,IAAD,OACZ,OAAOxC,KAAKuC,MAAMvB,KAAKoC,KAAI,SAACC,EAAGvB,GAC7B,OACE,kBAAC,EAAD,eAAawB,IAAMxB,GAAQuB,EAA3B,CAA8BtD,QAAU,WAAQ,EAAKwD,YAAYF,Y,kCAK3DrC,GACVhB,KAAK6C,SAAS,CAAEH,UAAW1B,M,oCAI3BhB,KAAK6C,SAAS,CAAEH,WAAW,M,+BAI3B,IAAIc,EAAa,CAAC,WACdxD,KAAKuC,MAAMC,SACbgB,EAAWC,KAAK,WAGlB,IAAIC,EAAe,CACjBrB,QAASrC,KAAK2D,YAAYf,KAAK5C,OAOjC,OAJ6B,IAAzBA,KAAKuC,MAAMG,YACbgB,EAAatB,KAAO,QAIpB,yBAAKtC,UAAY0D,EAAWI,KAAK,MAC7B5D,KAAK2C,cACP,kBAAC,EAAD,iBAAoBe,EAApB,CAAkC1C,KAAOhB,KAAKuC,MAAMG,kB,GA5DtChC,IAAMC,WCtE5BkD,IAASC,OACP,kBAAC,EAAD,MACArC,SAASsC,eAAe,W","file":"static/js/main.c7d03fb7.chunk.js","sourcesContent":["import React from 'react';\nimport '../scss/ToccMap.scss';\nimport '../scss/Loader.scss';\nimport '../scss/ResponsiveEmbed.scss';\n\nclass ToccMapItem extends React.Component {\n  render() {\n    return (\n      <div className=\"toccmap__item\" onClick={ this.props.onClick } style={ { left: this.props.coords.x, top: this.props.coords.y } }>\n        <i>{ this.props.content.icon }</i>\n      </div>\n    );\n  }\n}\n\nclass ToccMapOverlay extends React.Component {\n  render() {\n    let props = {\n      className: 'oc-overlay'\n    };\n\n    let content = \"\";\n    let styleOverride = {};\n    let buttonOverride = {\n      cursor: 'pointer'\n    };\n\n    const isHTML = (str) => {\n      var a = document.createElement('div');\n      a.innerHTML = str;\n\n      for (var c = a.childNodes, i = c.length; i--; ) {\n        if (c[i].nodeType === 1) return true;\n      }\n\n      return false;\n    }\n\n    if (this.props.data) {\n      if (this.props.data.content.modal.indexOf('www.youtube.com/embed') >= 0) {\n        styleOverride = {\n          background: 'none'\n        };\n        buttonOverride.color = 'white';\n        content = (\n          <div className=\"oc-responsive-embed\">\n            <iframe src={ this.props.data.content.modal } title={ this.props.data.content.icon } />\n          </div>\n        );\n      } else if (isHTML(this.props.data.content.modal)) {\n        content = (\n          <div className=\"oc-content\">\n            <div dangerouslySetInnerHTML={ { __html: this.props.data.content.modal } } />\n          </div>\n        );\n      } else {\n        content = (\n          <div className=\"oc-content\">\n            <p dangerouslySetInnerHTML={ { __html: this.props.data.content.modal } } />\n          </div>\n        );\n      }\n    }\n\n    if (this.props.open) {\n      props.open = 'open';\n    }\n    return (\n      <div {...props}>\n        <div className=\"oc-overlay__container\" style={ styleOverride }>\n          <button className=\"oc-overlay__close\" onClick={ this.props.onClose } style={ buttonOverride } />\n          { content }\n        </div>\n      </div>\n    );\n  }\n}\n\nclass ToccMap extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      data: [],\n      theme: 'Default',\n      modalItem: false\n    };\n\n    this.getMapItems = this.getMapItems.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true }, () => {\n      fetch('https://script.google.com/macros/s/AKfycbx0-06cEJ36cILW7N1QbyRvHJSiNrSCxL9QqHo_Sc90uDDHqA/exec', {\n        mode: 'cors',\n        redirect: 'follow'\n      }).then((res) => {\n        return res.json();\n      }).then((json) => {\n        this.setState({ data: json.data, theme: json.theme, loading: false });\n      });\n    });\n  }\n\n  getMapItems() {\n    return this.state.data.map((d, i) => {\n      return (\n        <ToccMapItem key={ i } {...d} onClick={ () => { this.onClickItem(d) } }/>\n      );\n    });\n  }\n\n  onClickItem(data) {\n    this.setState({ modalItem: data });\n  }\n\n  onCloseItem() {\n    this.setState({ modalItem: false });\n  }\n\n  render() {\n    let classNames = ['toccmap'];\n    if (this.state.loading) {\n      classNames.push('loading');\n    }\n\n    let overlayProps = {\n      onClose: this.onCloseItem.bind(this)\n    };\n\n    if (this.state.modalItem !== false) {\n      overlayProps.open = 'open';\n    }\n\n    return (\n      <div className={ classNames.join(' ') }>\n        { this.getMapItems() }\n        <ToccMapOverlay {...overlayProps} data={ this.state.modalItem } />\n      </div>\n    );\n  }\n}\n\nexport default ToccMap;\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/stable';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport ToccMap from './components/ToccMap';\n\nReactDOM.render(\n  <ToccMap />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}